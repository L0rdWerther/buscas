# Grafo dicionário, com distâncias embutidas
grafo = {
    'A': [('B', 1), ('C', 4)],
    'B': [('A', 1), ('C', 2), ('D', 5)],
    'C': [('A', 4), ('B', 2), ('D', 1), ('E', 8)],
    'D': [('B', 5), ('C', 1), ('E', 2), ('F', 6)],
    'E': [('C', 8), ('D', 2), ('F', 3), ('G', 7)],
    'F': [('D', 6), ('E', 3), ('G', 2), ('H', 5)],
    'G': [('E', 7), ('F', 2), ('H', 1), ('I', 4)],
    'H': [('F', 5), ('G', 1), ('I', 3), ('J', 2)],
    'I': [('G', 4), ('H', 3), ('J', 6), ('K', 5)],
    'J': [('H', 2), ('I', 6), ('K', 4), ('L', 7)],
    'K': [('I', 5), ('J', 4), ('L', 3), ('M', 6)],
    'L': [('J', 7), ('K', 3), ('M', 2), ('N', 8)],
    'M': [('K', 6), ('L', 2), ('N', 4)],
    'N': [('L', 8), ('M', 4)]
}

heuristica = {
    'A': 10, 'B': 8, 'C': 7, 'D': 6, 'E': 5,
    'F': 4, 'G': 3, 'H': 2, 'I': 1, 'J': 0,
    'K': 2, 'L': 3, 'M': 4, 'N': 5
}


# Definição do grid com obstáculos
grid = {
    'A': [('B', 1), ('C', 4)],
    'B': [('A', 4), ('D', 6), ('G', 5)],
    'C': [('A', 4), ('E', 3), ('D', 6)],
    'D': [('B', 1), ('C', 4), ('H', 2), ('F', 6)],
    'E': [('C', 4), ('F', 6)],
    'F': [('D', 6), ('E', 3), ('I', 3)],
    'G': [('H', 2), ('J', 4), ('B', 1)],
    'H': [('G', 5), ('I', 3), ('K', 5), ('D', 1)],
    'I': [('H', 2), ('L', 7), ('F', 6)],
    'J': [('G', 5), ('K', 5)],
    'K': [('J', 4), ('L', 7), ('H', 2)],
    'L': [('I', 3), ('K', 5)]
}

# Adicionando obstáculos
obstaculos = ['C', 'E', 'J']


'''
A -> B -> C
De A para B: peso = 1.
De B para C: peso = 2.
Custo total = 1 + 2 = 3.
'''
